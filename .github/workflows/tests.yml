name: tests

on: [push, pull_request]

jobs:

  nix:

    name: "py-${{ matrix.config.python }} lib-${{ matrix.config.ffmpeg }} ${{matrix.config.os}}"

    runs-on: ${{ matrix.config.os }}

    strategy:
      matrix:
        config:
          - {os: ubuntu-latest, python: 3.8, ffmpeg: "4.2", extras: true}

    env:
      PYAV_PYTHON: python${{ matrix.config.python }}
      PYAV_LIBRARY: ffmpeg-${{ matrix.config.ffmpeg }}

    steps:

    - uses: actions/checkout@v2
      name: Checkout

    - name: Python ${{ matrix.config.python }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.config.python }}

    - name: OS Packages
      run: |
        case ${{ matrix.config.os }} in
          ubuntu-latest)
            sudo apt-get update
            sudo apt-get install autoconf automake build-essential cmake \
              libtool mercurial pkg-config texinfo wget yasm zlib1g-dev
            sudo apt-get install libass-dev libfreetype6-dev libjpeg-dev \
              libtheora-dev libvorbis-dev libx264-dev
            if [[ "${{ matrix.config.extras }}" ]]; then
              sudo apt-get install doxygen
            fi
            ;;
          macos-latest)
            brew update
            brew install automake libtool nasm pkg-config shtool texi2html wget
            brew install libass libjpeg libpng libvorbis libvpx opus theora x264
            ;;
        esac

    - name: Pip and FFmpeg
      run: |
        . scripts/activate.sh ffmpeg-${{ matrix.config.ffmpeg }}
        scripts/build-deps

    - name: Build
      run: |
        . scripts/activate.sh ffmpeg-${{ matrix.config.ffmpeg }}
        scripts/build

    - name: Test
      run: |
        . scripts/activate.sh ffmpeg-${{ matrix.config.ffmpeg }}
        python -m av --version # Assert it can import.
        scripts/test

  armv64_job:
      name: Build and Test for arm64
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
        - name: Set up QEMU
          id: qemu
          uses: docker/setup-qemu-action@v1
        - name: Install and Run tests
          run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
              arm64v8/ubuntu:20.04 \
              bash -exc 'apt-get update && apt-get -y install python3 python3-pip python3-venv curl && \
              python3 -m pip install virtualenv && python3 -m venv py38-venv && \
              source py38-venv/bin/activate && \
              python -m pip install --upgrade pip && \
              python --version && \
              uname -m && \
              whoami && \
              pwd && \
              ls && \
              export PYAV_PYTHON: python3.8 && \
              export PYAV_LIBRARY: ffmpeg-"4.2" && \
              apt-get -y update && \
              apt-get -y install autoconf automake build-essential cmake libtool mercurial pkg-config texinfo wget yasm zlib1g-dev && \
              apt-get -y install libass-dev libfreetype6-dev libjpeg-dev libtheora-dev libvorbis-dev libx264-dev && \
              apt-get -y install doxygen && \
              . scripts/activate.sh ffmpeg-"4.2" && \
              scripts/build-deps && \
              . scripts/activate.sh ffmpeg-"4.2" && \
              scripts/build && \
              . scripts/activate.sh ffmpeg-"4.2" && \
              python -m av --version && \
              scripts/test && \
              deactivate'
